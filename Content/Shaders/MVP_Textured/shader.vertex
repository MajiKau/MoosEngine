#version 430
layout(location = 0) in vec3 vertex_position;
layout(location = 1) in vec2 texture_coordinate;
layout(location = 2) in vec3 vertex_normal;
layout(location = 3) uniform mat4 MVP;
layout(location = 4) in vec3 vertex_tangent;
layout(location = 5) in vec3 vertex_bitangent;
layout(location = 11) uniform mat4 M;
layout(location = 12) uniform mat4 V;
out vec3 Normal0;
out vec3 Tangent0;
out vec3 Bitangent0;
out vec2 tex_coord;
out vec3 WorldPos0;
out vec3 FragPos;
void main()
{
  gl_Position = MVP * vec4(vertex_position, 1.0);
  FragPos = vec3(M * vec4(vertex_position, 1.0));
  tex_coord = texture_coordinate;
  Normal0 = (M * vec4(vertex_normal, 0.0)).xyz;
  Tangent0 = (M * vec4(vertex_tangent, 0.0)).xyz;
  Bitangent0 = (M * vec4(vertex_bitangent, 0.0)).xyz;
  WorldPos0 = (M * vec4(vertex_position, 1.0)).xyz;
}